@page "/usevanna"
@using IntegrationBuilder.Pages.SQLServerUtilities;


<RadzenSteps Change=@OnChangeStep>
    <Steps>
        <RadzenStepsItem Text="Connect To SQL Server">
            <RadzenTemplateForm TItem="Credentials"  Data=@_sqlServerCredentials Submit=@CheckConnection>
                
                <RadzenFieldset Class="rz-color-secondary" Text="Connect To SQL Server" >
                <RadzenRow Gap="1rem" JustifyContent="JustifyContent.Center">
                    <RadzenColumn Size="9" SizeMD="3">
                    <RadzenStack>
                        <RadzenLabel Component="Server" Text="Server" />
                                <RadzenTextBox Name="Server" @bind-Value=@_sqlServerCredentials.Server />
                            <RadzenRequiredValidator Component="Server" Text="Server is required!" />
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow Gap="1rem" JustifyContent="JustifyContent.Center" >
                    <RadzenColumn Size="9" SizeMD="3">
                    <RadzenStack>
                        <RadzenLabel Component="Database" Text="Database" Class="rz-info-light" />
                                <RadzenTextBox Name="Database" @bind-Value=@_sqlServerCredentials.Database />
                            <RadzenRequiredValidator Component="Database" Text="Database is required!" />
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
                    <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Medium" Icon="save" Text="Check Connection" />
                </RadzenStack>
                    <RadzenRow Gap="1rem" JustifyContent="JustifyContent.Center">
                        <RadzenColumn Size="9" SizeMD="3">
                            <RadzenStack>
                                <RadzenLabel Text="@_infomsgs"></RadzenLabel>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                    
                </RadzenFieldset>
            </RadzenTemplateForm>
        </RadzenStepsItem>
        <RadzenStepsItem Text="Create or Set Model" Disabled="@_DisabledStep2">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="rz-my-6">2. Hello From Step 2</RadzenText>
        </RadzenStepsItem>
        <RadzenStepsItem Text="Train Your Model" Disabled="@_DisabledStep3">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="rz-my-6">2. Hello From Step 3</RadzenText>
        </RadzenStepsItem>
        <RadzenStepsItem Text="Ask Questions" Disabled="@_DisabledStep4">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="rz-my-6">2. Hello From Step 4</RadzenText>
        </RadzenStepsItem>
    </Steps>
</RadzenSteps>

@code {
    private Credentials _sqlServerCredentials;
    private string _infomsgs;
    private bool _DisabledStep2 = true;
    private bool _DisabledStep3 = true;
    private bool _DisabledStep4 = true;


    //General Code
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _sqlServerCredentials = new Credentials();
    }

    void OnChangeStep(int index)
    {
        //console.Log($"Step with index {index} was selected.");

        if (index == 1)
        {

        }
        else if (index == 2)
        {

        }
    }

    //Step 1 Code
    void CheckConnection(Credentials arg)
    {
        //Code Only For Windows Authentication
        this._infomsgs = "";
        try
        {
            
            string error = "";
            bool connSuccess = SQLServerLib.CheckConnection(this._sqlServerCredentials.Server.Trim(),
                                                            this._sqlServerCredentials.Database.Trim(), out error);
            if (connSuccess)
            {
                this._infomsgs = "Info: Connect to database Success!";
                this._DisabledStep2 = false;
            }
            else
            {
                this._infomsgs = $"Info: Connect to database Failed. Error message: {error}";
            }
        }
        catch (Exception exc)
        {
            this._infomsgs = $"Exception in OnSubmit. Exception message: {exc.Message}";
        }
    }


    ///--------------------------------------------------------///
    ///--------------------------------------------------------///
    ///--------------------------------------------------------///

    //Step 2 Code
}